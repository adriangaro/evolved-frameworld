frameworld_outpost_0 = {
	entity = "giga_frameworld_outpost_entity"
	construction_entity = "giga_frameworld_outpost_entity"
	portrait = "GFX_megastructure_construction_background"
	show_galactic_map_icon = no
	place_entity_on_planet_plane = no
	construction_blocks_others = no
	construction_blocked_by_others = no

	build_time = 720
	resources = {
		category = frameworld_outposts
		cost = {
			alloys = 400 # machine colony ship cost
			influence = 50 # actually less because they struggle # 50% more than a colony ship because no influence cost on frame expansion
		}
		upkeep = { 
			energy = 5 
		}

		# oh boy this is... a lot, you can find all the math behind this over in
		# common/scipt_values/giga_frameworld_outpost_values.txt
		# but beware, there's a LOT going on in there to generate these numbers!
		produces = { minerals = 1 				multiplier = value:giga_frameworld_outpost_raw_output|JOB|miners|CATEGORY|worker|RESOURCE|minerals| }
		produces = { energy = 1					multiplier = value:giga_frameworld_outpost_raw_output|JOB|technicians|CATEGORY|worker|RESOURCE|energy| }
		produces = { food = 1 					multiplier = value:giga_frameworld_outpost_raw_output|JOB|farmers|CATEGORY|worker|RESOURCE|food| }
		
		produces = { alloys = 1					multiplier = value:giga_frameworld_outpost_advanced_output|JOB|metallurgists|CATEGORY|specialist|RESOURCE|alloys| }
		produces = { consumer_goods = 1 		multiplier = value:giga_frameworld_outpost_advanced_output|JOB|artisans|CATEGORY|specialist|RESOURCE|consumer_goods| }

		produces = { physics_research = 1 		multiplier = value:giga_frameworld_outpost_science_output|JOB|researchers|CATEGORY|specialist|RESOURCE|physics_research| }
		produces = { society_research = 1 		multiplier = value:giga_frameworld_outpost_science_output|JOB|researchers|CATEGORY|specialist|RESOURCE|society_research| }
		produces = { engineering_research = 1 	multiplier = value:giga_frameworld_outpost_science_output|JOB|researchers|CATEGORY|specialist|RESOURCE|engineering_research| }

		produces = { unity = 1 					multiplier = value:giga_frameworld_outpost_unity_output|JOB|administrators|CATEGORY|specialist|RESOURCE|unity| }

		produces = { exotic_gases = 1 			multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|worker|RESOURCE|exotic_gases| }
		produces = { volatile_motes = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|worker|RESOURCE|volatile_motes| }
		produces = { rare_crystals = 1 			multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|worker|RESOURCE|rare_crystals| }

		produces = { sr_dark_matter = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|sr_dark_matter| }
		produces = { sr_zro = 1 				multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|sr_zro| }
		produces = { sr_living_metal = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|sr_living_metal| }
		produces = { nanites = 1 				multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|nanites| }

		produces = { minor_artifacts = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|minor_artifacts| }
	}

	potential = {
		has_origin = origin_frameworld
	}

	possible = { exists = starbase		custom_tooltip = { fail_text = "requires_inside_border" is_inside_border = from } }

	placement_rules = {
		planet_possible = {
			can_have_frameworld_outpost = yes
		}
	}

	ai_weight = {
    	weight = 100000 # VERY important, we should always build if possible
	}

	on_build_complete = {
		from = {
			save_event_target_as = outpost_owner
		}

    	fromfrom.planet = {
			# new outpost pops effect
			if = {
				limit = {
					event_target:outpost_owner = { has_origin = origin_frameworld } # minor sanity check
					not = { has_planet_flag = giga_frameworld_outpost_pops }
				}

				set_planet_flag = giga_frameworld_outpost_pops

				# add pops to home equal to bonus pops for colonies
				event_target:outpost_owner = {
					random_owned_planet = {
						limit = {
							has_planet_flag = giga_frameworld@event_target:outpost_owner
						}
						save_event_target_as = giga_frameworld

						# add pops equal to colony pop bonus
						set_update_modifiers_batch = begin
						while = {
							count = value:giga_frameworld_outpost_pops|WHO|event_target:outpost_owner|WHERE|fromfrom.planet|

							create_pop = {
								species = event_target:outpost_owner
							}
						}
						set_update_modifiers_batch = end
					}
				}
			}
			# end pops

			giga_frameworld_set_outpost_flags = yes

			giga_frameworld_create_outpost_holder_colony = yes
		}
		from = {
			giga_frameworld_recalculate_outpost_bonus = yes

			# if this is our first outpost, fire off a notification event
			if = {
				limit = {
					not = { has_country_flag = first_colony }
				}
				set_country_flag = first_colony
				country_event = {
					id = giga_frameworld_origin.107
					scopes = {
						from = fromfrom.planet
					}
				}
			}

			# send notification if pops were spawned
			# takes a lot of scopes from right here so don't use elsewhere
			giga_frameworld_outpost_message = yes
		}
		fromfrom.solar_system = {
			giga_frameworld_update_system_icon = yes
		}
	}
}

frameworld_outpost_marked_0 = {
	entity = "giga_frameworld_outpost_entity"
	construction_entity = "giga_frameworld_outpost_entity"
	portrait = "GFX_megastructure_construction_background"
	show_galactic_map_icon = no
	place_entity_on_planet_plane = no
	construction_blocks_others = no
	construction_blocked_by_others = no

	# this is incredibly silly but might just be silly enough to work...
	bypass_type = giga_frameworld_outpost_icon

	build_time = 720
	resources = {
		category = frameworld_outposts
		cost = {
			alloys = 400 # machine colony ship cost
			influence = 50 # actually less because they struggle # 50% more than a colony ship because no influence cost on frame expansion
		}
		upkeep = { 
			energy = 5 
		}

		# oh boy this is... a lot, you can find all the math behind this over in
		# common/scipt_values/giga_frameworld_outpost_values.txt
		# but beware, there's a LOT going on in there to generate these numbers!
		produces = { minerals = 1 				multiplier = value:giga_frameworld_outpost_raw_output|JOB|miners|CATEGORY|worker|RESOURCE|minerals| }
		produces = { energy = 1					multiplier = value:giga_frameworld_outpost_raw_output|JOB|technicians|CATEGORY|worker|RESOURCE|energy| }
		produces = { food = 1 					multiplier = value:giga_frameworld_outpost_raw_output|JOB|farmers|CATEGORY|worker|RESOURCE|food| }
		
		produces = { alloys = 1					multiplier = value:giga_frameworld_outpost_advanced_output|JOB|metallurgists|CATEGORY|specialist|RESOURCE|alloys| }
		produces = { consumer_goods = 1 		multiplier = value:giga_frameworld_outpost_advanced_output|JOB|artisans|CATEGORY|specialist|RESOURCE|consumer_goods| }

		produces = { physics_research = 1 		multiplier = value:giga_frameworld_outpost_science_output|JOB|researchers|CATEGORY|specialist|RESOURCE|physics_research| }
		produces = { society_research = 1 		multiplier = value:giga_frameworld_outpost_science_output|JOB|researchers|CATEGORY|specialist|RESOURCE|society_research| }
		produces = { engineering_research = 1 	multiplier = value:giga_frameworld_outpost_science_output|JOB|researchers|CATEGORY|specialist|RESOURCE|engineering_research| }

		produces = { unity = 1 					multiplier = value:giga_frameworld_outpost_unity_output|JOB|administrators|CATEGORY|specialist|RESOURCE|unity| }

		produces = { exotic_gases = 1 			multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|worker|RESOURCE|exotic_gases| }
		produces = { volatile_motes = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|worker|RESOURCE|volatile_motes| }
		produces = { rare_crystals = 1 			multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|worker|RESOURCE|rare_crystals| }

		produces = { sr_dark_matter = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|sr_dark_matter| }
		produces = { sr_zro = 1 				multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|sr_zro| }
		produces = { sr_living_metal = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|sr_living_metal| }
		produces = { nanites = 1 				multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|nanites| }

		produces = { minor_artifacts = 1 		multiplier = value:giga_frameworld_outpost_rare_output|JOB|planet_sr_miners|CATEGORY|specialist|RESOURCE|minor_artifacts| }
	}

	potential = {
		always = no # special version with marker, updated by event
	}

	possible = { exists = starbase		custom_tooltip = { fail_text = "requires_inside_border" is_inside_border = from } }

	placement_rules = {
		planet_possible = {
			can_have_frameworld_outpost = yes
		}
	}

	ai_weight = {
    	weight = 0
	}
}